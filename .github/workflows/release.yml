name: Release a new version

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: "Version increment type (major, minor, patch)"
        required: true
        default: "patch"

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Run Gradle tests
#      - name: Run Gradle tests
#        run: ./gradlew test
#
#      # Check if tests passed before allowing merge
#      - name: Ensure tests pass before merge
#        if: failure()
#        run: echo "Tests failed. Cannot merge the PR." && exit 1

  increment-version:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get latest tag
        id: get_latest_tag
        run: |
          git fetch --tags
          echo "latest=$(git describe --tags --abbrev=0 || echo 'v0.0.0')" >> $GITHUB_ENV

      - name: Increment version
        id: increment_version
        run: |
          latest_version=${latest#v}
          echo $latest_version
          major=$(echo $latest_version | cut -d. -f1)
          minor=$(echo $latest_version | cut -d. -f2)
          patch=$(echo $latest_version | cut -d. -f3)

          case "${{ github.event.inputs.version_type }}" in
            major)
              major=$((major + 1))
              minor=0
              patch=0
              ;;
            minor)
              minor=$((minor + 1))
              patch=0
              ;;
            patch)
              patch=$((patch + 1))
              ;;
            *)
              echo "Invalid version type: ${{ github.event.inputs.version_type }}"
              exit 1
              ;;
          esac

          new_version="v${major}.${minor}.${patch}"
          echo "new_version=$new_version" >> $GITHUB_ENV
          echo "New version is $new_version"
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      # Update the version in the repository
      - name: Commit and push new version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
          git config user.name "${DH_GH_USERNAME}"
          git config user.email "${DH_GH_USERNAME}@users.noreply.github.com"
          echo "$new_version" > VERSION
          git tag $new_version
          git push origin main --tags

      - name: Debug new version
        run: |
          echo "New version: ${{ needs.increment-version.outputs.new_version }}"


  publish:
    runs-on: ubuntu-latest
    needs: increment-version

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permissions for Gradle
        run: chmod +x ./gradlew

      - name: Debug new version
        run: |
          echo "output: ${{ needs.increment-version.envs.new_version }}"
          echo "New version: ${{ needs.increment-version.outputs.new_version }}"

      - name: Publish JAR to GitHub Packages
        env:
          DH_GH_USERNAME: ${{ github.actor }}
          DH_GH_TOKEN: ${{ secrets.DH_GH_TOKEN }}
        run: ./gradlew publish -Pversion=${{ needs.increment-version.outputs.new_version }}